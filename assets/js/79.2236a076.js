(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{506:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("官网地址："),s("a",{attrs:{href:"https://www.elastic.co/cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.elastic.co/cn/"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("下载地址："),s("a",{attrs:{href:"https://www.elastic.co/cn/downloads/past-releases#elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.elastic.co/cn/downloads/past-releases#elasticsearch"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"一、docker-安装-es"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、docker-安装-es"}},[t._v("#")]),t._v(" 一、Docker 安装 ES")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" elasticsearch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v(":9200 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9300")]),t._v(":9300 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"discovery.type=single-node"')]),t._v(" elasticsearch:7.8.0\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("输入地址："),s("a",{attrs:{href:"http://localhost:9200",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9200"),s("OutboundLink")],1),t._v(" 测试结果：")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cedacb20baff"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cluster_name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker-cluster"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cluster_uuid"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"o1AmB1nuRPKGq7FXRXCstA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"number"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7.8.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_flavor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_hash"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"757314695644ea9a1dc2fecd26d1a43856725e65"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_date"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-14T19:35:50.234439Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_snapshot"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lucene_version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.5.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum_wire_compatibility_version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6.8.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum_index_compatibility_version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6.0.0-beta1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tagline"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You Know, for Search"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h2",{attrs:{id:"二、基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[t._v("#")]),t._v(" 二、基本概念")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Elasticsearch")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("索引(Index)")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型(Type)")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("文档(Docments)")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("字段(Fields)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("|")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("关系数据库(MySQL)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据库(DataBase)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表(Table)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("行(Rows)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("列(Columns)")])])])]),t._v(" "),s("h3",{attrs:{id:"index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[t._v("#")]),t._v(" Index")]),t._v(" "),s("p",[s("code",[t._v("索引")]),t._v(" "),s("strong",[t._v("一个索引就是一个拥有几分相似特征的文档的集合")]),t._v("。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识（必须全部是小写字母），并且当我们要对这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字。在一个集群中，可以定义任意多的索引。 能搜索的数据必须索引，这样的好处是可以提高查询速度，比如：新华字典前面的目录就是索引的意思，目录可以"),s("strong",[t._v("提高查询速度")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" Type")]),t._v(" "),s("p",[s("code",[t._v("类型")])]),t._v(" "),s("p",[t._v("在一个索引中，你可以定义一种或多种类型。 一个类型是你的索引的一个逻辑上的分类/分区，其语义完全由你来定。通常，会为具有一组共同字段的文档定义一个类型。不同的版本，类型发生了不同的变化")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("版本")]),t._v(" "),s("th",[t._v("Type")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("5.x")]),t._v(" "),s("td",[t._v("支持多种type")])]),t._v(" "),s("tr",[s("td",[t._v("6.x")]),t._v(" "),s("td",[t._v("只能有一种type")])]),t._v(" "),s("tr",[s("td",[t._v("7.x")]),t._v(" "),s("td",[t._v("默认不再支持自定义索引类型（默认类型为：_doc）")])])])]),t._v(" "),s("h3",{attrs:{id:"docments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docments"}},[t._v("#")]),t._v(" Docments")]),t._v(" "),s("p",[s("code",[t._v("文档")])]),t._v(" "),s("p",[t._v("一个文档是一个可被索引的基础信息单元，也就是一条数据 比如：你可以拥有某一个客户的文档，某一个产品的一个文档，当然，也可以拥有某个订单的一个文档。文档以JSON（Javascript Object Notation）格式来表示，而JSON是一个到处存在的互联网数据交互格式。 在一个index/type里面，你可以存储任意多的文档。")]),t._v(" "),s("h3",{attrs:{id:"fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fields"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),s("p",[s("code",[t._v("字段")])]),t._v(" "),s("p",[t._v("相当于是数据表的字段，对文档数据根据不同属性进行的分类标识。")]),t._v(" "),s("h3",{attrs:{id:"mapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapping"}},[t._v("#")]),t._v(" Mapping")]),t._v(" "),s("p",[s("code",[t._v("映射")])]),t._v(" "),s("p",[t._v("mapping是处理数据的方式和规则方面做一些限制，如：某个字段的数据类型、默认值、分析器、是否被索引等等。这些都是映射里面可以设置的，其它就是处理ES里面数据的一些使用规则设置也叫做映射，按着最优规则处理数据对性能提高很大，因此才需要建立映射，并且需要思考如何建立映射才能对性能更好。")]),t._v(" "),s("h3",{attrs:{id:"shards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shards"}},[t._v("#")]),t._v(" Shards")]),t._v(" "),s("p",[s("code",[t._v("分片")])]),t._v(" "),s("p",[t._v('一个索引可以存储超出单个节点硬件限制的大量数据。比如，一个具有10亿文档数据的索引占据1TB的磁盘空间，而任一节点都可能没有这样大的磁盘空间。或者单个节点处理搜索请求，响应太慢。为了解决这个问题ES提供了将索引划分成多份的能力，每一份就称之为分片。当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的"索引",这个"索引"可以被放置到集群中的任何节点上。 分片很重要，主要有两方面的原因： i.允许你水平分割/扩展你的内容容量。 ii.允许你在分片之上进行分布式的、并行的操作，进而提高性能/吞吐量。 至于一个分片怎样分布，它的文档怎样聚合和搜索请求，是完全由Elasticsearch管理的，对于作为用户的你来说，这些都是透明的，无需过分关心。')]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("blockquote",[s("p",[t._v("被混淆的概念是，一个 Lucene 索引 我们在 Elasticsearch 称作 分片 。 一个 Elasticsearch 索引 是分片的集合。 当 Elasticsearch 在索引中搜索的时候， 他发送查询到每一个属于索引的分片(Lucene 索引)，然后合并每个分片的结果到一个全局的结果集。")])]),t._v(" "),s("h3",{attrs:{id:"replicas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicas"}},[t._v("#")]),t._v(" Replicas")]),t._v(" "),s("p",[s("code",[t._v("副本")])]),t._v(" "),s("blockquote",[s("p",[t._v("在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch允许你创建分片的一份或多份拷贝，这些拷贝叫做复制分片(副本)。")])]),t._v(" "),s("p",[s("strong",[t._v("复制分片之所以重要，有两个主要原因：")])]),t._v(" "),s("p",[t._v("在分片/节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原/主要（original/primary）分片置于同一节点上是非常重要的。扩展你的搜索量/吞吐量，因为搜索可以在所有的副本上并行运行。")]),t._v(" "),s("p",[t._v("总之，每个索引可以被分成多个分片。一个索引也可以被复制0次（意思是没有复制）或多次。一旦复制了，每个索引就有了主分片（作为复制源的原来的分片）和复制分片（主分片的拷贝）之别。分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变复制的数量，但是你事后不能改变分片的数量。默认情况下，Elasticsearch中的每个索引被分片1个主分片和1个复制，这意味着，如果你的集群中至少有两个节点，你的索引将会有1个主分片和另外1个复制分片（1个完全拷贝），这样的话每个索引总共就有2个分片，我们需要根据索引需要确定分片个数。")]),t._v(" "),s("h3",{attrs:{id:"allocation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allocation"}},[t._v("#")]),t._v(" Allocation")]),t._v(" "),s("p",[s("code",[t._v("分配")])]),t._v(" "),s("p",[t._v("将分片分配给某个节点的过程，包括分配主分片或者副本。如果是副本，还包含从主分片复制数据的过程。这个过程是由master节点完成的。")])])}),[],!1,null,null,null);s.default=r.exports}}]);