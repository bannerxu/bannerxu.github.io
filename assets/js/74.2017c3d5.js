(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{501:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷"}},[a._v("#")]),a._v(" 数据卷")]),a._v(" "),s("h3",{attrs:{id:"什么是数据卷-能干什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据卷-能干什么"}},[a._v("#")]),a._v(" 什么是数据卷，能干什么？")]),a._v(" "),s("p",[a._v("数据卷是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：")]),a._v(" "),s("ul",[s("li",[a._v("数据卷可以在容器之间共享和重用")]),a._v(" "),s("li",[a._v("对数据卷的修改会立马生效")]),a._v(" "),s("li",[a._v("对数据卷的更新，不会影响镜像")]),a._v(" "),s("li",[a._v("卷会一直存在，直到没有容器使用\n数据卷的使用，类似于 Linux 下对目录或文件进行 mount。")])]),a._v(" "),s("h3",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /宿主机绝对路径目录:/容器内目录 镜像名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 带权限")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /宿主机绝对路径目录:/容器内目录:ro 镜像名\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("查看数据卷是否挂载成功")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect 容器ID\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("Docker挂载主机目录Docker访问出现\n"),s("code",[a._v("cannot open directory .: Permission denied")]),a._v("\n解决办法：\n在挂载目录后多加一个"),s("code",[a._v("--privileged=true")]),a._v("参数即可")]),a._v(" "),s("h2",{attrs:{id:"数据卷容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[a._v("#")]),a._v(" 数据卷容器")]),a._v(" "),s("p",[a._v("命名的容器挂载数据卷，其它容器通过挂载这个(父容器)实现数据共享，挂载数据卷的容器，称之为数据卷容器")]),a._v(" "),s("h3",{attrs:{id:"容器间传递共享-volumes-from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器间传递共享-volumes-from"}},[a._v("#")]),a._v(" 容器间传递共享(--volumes-from)")]),a._v(" "),s("p",[a._v("首先，创建一个命名的数据卷容器 dbdata：")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /dbdata "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" dbdata training/postgres "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Data-only container "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" postgres\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("然后，在其他容器中使用 --volumes-from 来挂载 dbdata 容器中的数据卷。")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --volumes-from dbdata "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" db1 training/postgres\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --volumes-from dbdata "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" db2 training/postgres\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("还可以使用多个 --volumes-from 参数来从多个容器挂载多个数据卷。 也可以从其他已经挂载了数据卷的容器来挂载数据卷。")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" db3 --volumes-from db1 training/postgres\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("如果删除了挂载的容器（包括 dbdata、db1 和 db2），数据卷并不会被自动删除。如果要删除一个数据卷，必须在删除最后一个还挂载着它的容器时使用 docker rm -v 命令来指定同时删除关联的容器。 这可以让用户在容器之间升级和移动数据卷。")]),a._v(" "),s("p",[s("strong",[a._v("使用 --volumes-from 参数所挂载数据卷的容器自己并不需要保持在运行状态。")]),a._v(" "),s("strong",[a._v("容器之间配置信息的传递，数据卷的生命周期一直持续到没有容器使用它为止")])]),a._v(" "),s("h2",{attrs:{id:"利用数据卷容器来备份、恢复、迁移数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用数据卷容器来备份、恢复、迁移数据卷"}},[a._v("#")]),a._v(" 利用数据卷容器来备份、恢复、迁移数据卷")]),a._v(" "),s("h3",{attrs:{id:"备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份"}},[a._v("#")]),a._v(" 备份")]),a._v(" "),s("p",[a._v("首先使用 --volumes-from 标记来创建一个加载 dbdata 容器卷的容器，并从本地主机挂载当前到容器的 /backup 目录。命令如下：")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run --volumes-from dbdata "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":/backup ubuntu "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" cvf /backup/backup.tar /dbdata\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("容器启动后，使用了 tar 命令来将 dbdata 卷备份为本地的 /backup/backup.tar。")]),a._v(" "),s("h3",{attrs:{id:"恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复"}},[a._v("#")]),a._v(" 恢复")]),a._v(" "),s("p",[a._v("如果要恢复数据到一个容器，首先创建一个带有数据卷的容器 dbdata2。\nsudo docker run -v /dbdata --name dbdata2 ubuntu /bin/bash\n然后创建另一个容器，挂载 dbdata2 的容器，并使用 untar 解压备份文件到挂载的容器卷中。")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run --volumes-from dbdata2 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":/backup busybox "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xvf\n/backup/backup.tar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);